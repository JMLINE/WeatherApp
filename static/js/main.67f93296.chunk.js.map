{"version":3,"sources":["logo.svg","components/Weather.jsx","components/WeatherAlerts.jsx","components/NavBar.js","components/WeatherSearch.jsx","App.js","reportWebVitals.js","index.js"],"names":["WEATHER_KEY","Weather","props","useState","weatherData","setWeatherData","city","setCity","fetch","lat","long","then","response","json","data","main","temp","console","log","name","className","Math","floor","WeatherAlerts","weatherAlert","setWeatherAlert","useEffect","style","color","NavBar","href","target","WeatherSearch","weatherSearch","setWeatherSearch","toggle","setToggle","cityName","setCityName","errorMessage","setErrorMessage","weatherFor","setWeatherFor","isDisabled","setIsDisabled","handleToggle","Form","onSubmit","e","preventDefault","weather","description","catch","error","Container","Row","Col","sm","md","size","offset","FormGroup","Label","htmlFor","Input","placeholder","required","disabled","onChange","value","Button","Alert","outline","width","onClick","type","App","setLat","setLong","navigator","geolocation","getCurrentPosition","position","coords","latitude","toFixed","longitude","localStorage","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,I,kBCGXA,EAAc,mCA2CHC,MAzCf,SAAiBC,GAAQ,IAAD,EACgBC,qBADhB,mBACfC,EADe,KACFC,EADE,OAEMF,oBAAS,GAFf,gCAGIA,mBAAS,KAHb,mBAGdG,EAHc,KAGRC,EAHQ,KA+BtB,OAxBEC,MAAM,uDAAD,OACoDN,EAAMO,IAD1D,gBACqEP,EAAMQ,KAD3E,kBACyFV,IAE3FW,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACPT,EAAeS,EAAKC,KAAKC,MACzBC,QAAQC,IAAIJ,EAAKC,KAAKC,SAKxBR,MAAM,sDAAD,OACmDN,EAAMO,IADzD,gBACoEP,EAAMQ,KAD1E,0BACgGV,IAClGW,MAAK,SAACC,GAAD,OAAaA,EAASC,UAC3BF,MAAK,SAACG,GAAD,OAAUP,EAAQO,EAAK,GAAGK,SAWlC,gCACC,qBAAKC,UAAY,aAChB,iDAAoBC,KAAKC,MAAoB,IAAdlB,EAAoB,QAAS,QAA5D,eAA+EE,SCVlEiB,MAtBnB,SAAuBrB,GAAO,IAAD,EACeC,mBAAS,IADxB,mBAClBqB,EADkB,KACJC,EADI,KAerB,OAJAC,qBAAU,WAPVlB,MAAM,uDAAD,OACiDN,EAAMO,IADvD,gBACkEP,EAAMQ,KADxE,wDANK,qCASPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACNW,EAAgBX,EAAK,SAIlB,IAGD,8BACqB,MAAhBU,EAAuB,oBAAIG,MAAQ,CAACC,MAAO,SAApB,uCAA+D,6BAAKJ,OCH7FK,EAjBA,SAAC3B,GAEhB,OACI,mCACA,sBAAKkB,UAAY,WAAjB,UACA,oBAAIA,UAAU,SAAd,SACC,oBAAGU,KAAK,uCAAuCC,OAAO,SAAtD,cAAgE,mBAAGX,UAAU,6BAC1E,qBAAKA,UAAY,WAAjB,yBACI,qBAAKA,UAAY,UAAjB,SACmB,IAAdlB,EAAMO,IAAY,GAAK,cAAC,EAAD,CAASA,IAAOP,EAAMO,IAAKC,KAAQR,EAAMQ,SAChE,cAAC,EAAD,CAAeD,IAAOP,EAAMO,IAAKC,KAAQR,EAAMQ,a,wECyFjDsB,MAxFf,WAA0B,IAAD,EACmB7B,mBAAS,QAD5B,mBAChB8B,EADgB,KACDC,EADC,OAEK/B,oBAAS,GAFd,mBAEhBgC,EAFgB,KAERC,EAFQ,OAGUjC,mBAAS,IAHnB,mBAGhBkC,EAHgB,KAGNC,EAHM,OAIiBnC,oBAAS,GAJ1B,mBAIhBoC,EAJgB,KAIFC,EAJE,OAKarC,mBAAS,IALtB,mBAKhBsC,EALgB,KAKJC,EALI,OAMavC,oBAAS,GANtB,mBAMhBwC,EANgB,KAMJC,EANI,KA4BvB,SAASC,IAENT,GADa,IAAXD,GAYL,OACE,gCACI,cAACW,EAAA,EAAD,CAAMC,SAjCc,SAACC,GACvBA,EAAEC,iBACJzC,MAAM,qDAAD,OACkD6B,EADlD,kBAdS,qCAkBX1B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACPoB,EAAiBpB,EAAKC,KAAKC,MAC3B0B,EAAc5B,EAAKoC,QAAQ,GAAGC,aAC9BP,GAAc,GACdJ,GAAgB,MAEfY,OAAM,SAASC,GACdpC,QAAQC,IAAImC,GACZb,GAAgB,OAkBhB,SACI,cAACc,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAApC,UACR,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAOC,QAAU,SACjB,cAACC,EAAA,EAAD,CACA7C,KAAO,OACP8C,YAAc,gBACdC,UAAQ,EACRC,SAAYxB,EACZyB,SAAY,SAACpB,GACTV,EAAYU,EAAEjB,OAAOsC,QAEzBA,MAAShC,OAGD,cAACmB,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAApC,SACmB,SAAlB3B,EAA2B,GAAI,cAACqC,EAAA,EAAD,iCAM1B,IAAjB/B,EAAwB,cAACgC,EAAA,EAAD,CAAO3C,MAAM,SAAb,0EAElB,GACV,qBAAKR,UAAY,aAGG,SAAlBa,EAA2B,GAC5B,mDAAgC,IAAXE,EAAkBd,KAAKC,MAAsB,IAAhBW,EAAsB,QAAS,QAAOZ,KAAKC,MAAMW,EAAgB,QAAQ,QAA3H,eAA8II,EAA9I,SAA8JI,EAA9J,OAEA,uBACmB,SAAlBR,EAA2B,IACjB,IAAXE,EAAkB,cAACmC,EAAA,EAAD,CAAQE,SAAO,EAAC5C,MAAQ,UAAUD,MAAQ,CAAC8C,MAAO,OAAQC,QAAU7B,EAApE,6BAClB,cAACyB,EAAA,EAAD,CAAQE,SAAO,EAAC5C,MAAQ,UAASD,MAAQ,CAAC8C,MAAO,OAAQC,QAAU7B,EAAnE,gCACA,uBACmB,SAAlBZ,EAA2B,GAC5B,cAACqC,EAAA,EAAD,CAAQE,SAAO,EAAC5C,MAAQ,SAAQ+C,KAAK,SAAQhD,MAAQ,CAAC8C,MAAO,OAAQC,QA/CxE,WACIxC,EAAiB,QACjBI,EAAY,IACZM,GAAc,IA4Cf,uBCvDSgC,MAjCf,WAAgB,IAAD,EACSzE,mBAAS,GADlB,mBACNM,EADM,KACDoE,EADC,OAEW1E,mBAAS,GAFpB,mBAENO,EAFM,KAEAoE,EAFA,KAmBb,OAdMC,UAAUC,aACZD,UAAUC,YAAYC,oBAGxB,SAAqBC,GACnBL,EAAOK,EAASC,OAAOC,SAASC,QAAQ,IACxCP,EAAQI,EAASC,OAAOG,UAAUD,QAAQ,IAC1CE,aAAaC,QAAQ,MAAO/E,GAC5B8E,aAAaC,QAAQ,OAAQ9E,MAOjC,sBAAKU,UAAY,MAAjB,UAIF,cAAC,EAAD,CAAQX,IAAOA,EAAKC,KAAQA,IAC5B,cAAC,EAAD,QCtBe+E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhF,MAAK,YAAkD,IAA/CiF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67f93296.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useImperativeHandle, useState } from \"react\";\r\nimport { Button } from 'reactstrap';\r\n\r\nlet WEATHER_KEY = \"dedeb7c6599b636ce8aa4a3e222a687f\";\r\n\r\nfunction Weather(props) {\r\n  const [weatherData, setWeatherData] = useState();\r\n  const [toggle, setToggle] = useState(true);\r\n  const  [city, setCity ] = useState('')\r\n\r\n  \r\n  function fetchResults2(){\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${props.lat}&lon=${props.long}&appid=${WEATHER_KEY}`\r\n      )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n      setWeatherData(data.main.temp);\r\n      console.log(data.main.temp);\r\n      })\r\n    }\r\n\r\n  function reverseGeo(){\r\n    fetch(\r\n      `https://api.openweathermap.org/geo/1.0/reverse?lat=${props.lat}&lon=${props.long}&limit=5&appid=${WEATHER_KEY}`)\r\n      .then((response) =>response.json())\r\n      .then((data) => setCity(data[0].name))\r\n     }\r\n    \r\n\r\n\r\n  // useEffect(() => {\r\n  // }, []);\r\n  \r\n fetchResults2();\r\n  reverseGeo();\r\n  return (\r\n    <div>\r\n     <div className = \"cityName\"></div>\r\n      <p>It is currently {Math.floor(weatherData * 1.8 - 459.67) +\"Â°F\" } degrees in {city} \r\n      </p>\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Weather;","//still working on\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nlet WEATHER_KEY = \"dedeb7c6599b636ce8aa4a3e222a687f\";\r\n\r\nfunction WeatherAlerts(props){\r\n    const [weatherAlert, setWeatherAlert] = useState([])\r\n\r\n    function fetchAlert() {\r\n        fetch(\r\n       `https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.long}&exclude=daily,current,minutely,hourly&appid=${WEATHER_KEY}`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => \r\n          setWeatherAlert(data[0]))\r\n        }\r\n        useEffect(() => {\r\n            fetchAlert();\r\n          }, []);\r\n        \r\n        return (\r\n            <div>\r\n                {weatherAlert == null ? <h4 style ={{color: 'black'}}>No Current Weather Alerts</h4> : <h4>{weatherAlert}</h4>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    export default WeatherAlerts","import \"./NavStyle.css\"\r\nimport Weather from \"../components/Weather\"\r\nimport WeatherAlerts from \"../components/WeatherAlerts\"\r\n\r\nconst NavBar = (props) =>{\r\n\r\nreturn(\r\n    <>\r\n    <div className = \"navTitle\">\r\n    <li className=\"gitHub\">\r\n\t    <a href=\"https://github.com/JMLINE/WeatherApp\" target=\"_blank\"> <i className=\"fab fa-github fa-2x\"></i></a></li>\r\n        <div className = \"newTitle\">Weather App</div>\r\n            <div className = \"current\">\r\n                {props.lat === 0 ? \"\" : <Weather lat = {props.lat} long = {props.long} />}</div>\r\n                {<WeatherAlerts lat = {props.lat} long = {props.long} />}\r\n                </div>\r\n            \r\n    </>\r\n)\r\n}\r\n\r\nexport default NavBar","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Alert,\r\n} from \"reactstrap\";\r\n\r\nlet WEATHER_KEY = \"dedeb7c6599b636ce8aa4a3e222a687f\";\r\n\r\nfunction WeatherSearch() {\r\n  const [weatherSearch, setWeatherSearch] = useState(\"NaNa\");\r\n  const [toggle, setToggle] = useState(true);\r\n  const [cityName, setCityName ] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n  const [weatherFor, setWeatherFor] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  \r\n  \r\n\r\n const fetchResultsSearch = (e) => {\r\n      e.preventDefault();\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${WEATHER_KEY}`\r\n\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n      setWeatherSearch(data.main.temp);\r\n      setWeatherFor(data.weather[0].description);\r\n      setIsDisabled(true);\r\n      setErrorMessage(false)\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error)\r\n        setErrorMessage(true)})\r\n     \r\n  }\r\n  function handleToggle(){\r\n   if (toggle === true){\r\n     setToggle(false)\r\n   } else {\r\n     setToggle(true)\r\n   }}\r\n\r\n   function clearData(){\r\n       setWeatherSearch(\"NaNa\")\r\n       setCityName(\"\")\r\n       setIsDisabled(false)\r\n   }\r\n\r\n  return (\r\n    <div>\r\n        <Form onSubmit ={fetchResultsSearch}>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <FormGroup>\r\n            <Label htmlFor = \"city\" />\r\n            <Input \r\n            name = \"city\"\r\n            placeholder = \"Search a City\"\r\n            required\r\n            disabled = {isDisabled}\r\n            onChange = {(e) => {\r\n                setCityName(e.target.value)\r\n            }}\r\n            value = {cityName} />\r\n            </FormGroup>\r\n                \r\n                    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                    {weatherSearch !== \"NaNa\" ? \"\" :<Button>Search</Button>}\r\n                    </Col>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Form>\r\n        {errorMessage === true ? <Alert color=\"danger\">\r\n      An Error Occured.  Please Check Your Spelling and Try Again.\r\n    </Alert> : \"\"}\r\n     <div className = \"cityName\"></div>\r\n \r\n    \r\n      {weatherSearch === \"NaNa\" ? \"\" : \r\n      <h3>It is currently {toggle === true ? Math.floor(weatherSearch * 1.8 - 459.67) +\"Â°F\" : Math.floor(weatherSearch - 273.12)+\"Â°C\" } degrees in {cityName} with {weatherFor}.\r\n        </h3>}\r\n      <br></br>\r\n      {weatherSearch === \"NaNa\" ? \"\" : \r\n      toggle === true ? <Button outline color = \"success\" style= {{width: \"20%\"}} onClick ={handleToggle}>Prefer Celcius?</Button>:\r\n      <Button outline color = \"primary\"style= {{width: \"20%\"}} onClick ={handleToggle}>Prefer Fahrenheit?</Button>}\r\n      <br></br>\r\n      {weatherSearch === \"NaNa\" ? \"\" :\r\n      <Button outline color = \"danger\"type=\"submit\"style= {{width: \"20%\"}} onClick={clearData}>Clear</Button>}\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\nexport default WeatherSearch;","import React, { useState, useEffect }from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from \"./components/NavBar\"\nimport Weather from \"./components/Weather\"\nimport WeatherSearch from \"./components/WeatherSearch\"\nimport WeatherAlerts from \"./components/WeatherAlerts\"\n\n\nfunction App() {\n  const [lat, setLat] = useState(0)\n  const [long, setLong] = useState(0)\n \n  let Geo = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(getPosition);\n    }\n\n    function getPosition(position) {\n      setLat(position.coords.latitude.toFixed(2));\n      setLong(position.coords.longitude.toFixed(2));\n      localStorage.setItem(\"lat\", lat)\n      localStorage.setItem(\"long\", long)\n\n      \n      \n    }}\n Geo()\n  return ( \n  <div className = \"App\" >\n\n\n   \n<NavBar lat = {lat} long = {long}/>\n<WeatherSearch />\n\n    </div>\n  );\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}